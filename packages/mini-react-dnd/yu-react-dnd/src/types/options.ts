export interface DragSourceOptions {
	/**
     * 可选的。一个字符串。默认情况下,“移动”。在支持此特性的浏览器中，指定'copy'
     * 显示了一个特殊的“复制”光标，而“移动”则对应于“移动”光标。你可能想用 *此选项提供一个提示给用户一个操作是否具有破坏性。
	 */
	dropEffect?: string
}

export interface DragPreviewOptions {
	/**
     * 可选的。一个布尔值。默认情况下,假的。如果为真，组件将知道它作为拖拽对象被立即拖拽
     * 开始而不是下一个滴答。这意味着屏幕截图将在monitor. isdrag()已经为真时发生
     * 如果你应用任何样式，如降低不透明度的拖动元素，这种样式也会反映在
     * 截图。这很少是可取的，因此false是一个合理的默认值。但是，在极少数情况下，你可能想把它设为true，
     * 例如，如果你想让自定义拖动图层在IE中工作，你需要h
	 */
	captureDraggingState?: boolean

	/**
	 * 可选的。0到1之间的数字。默认情况下,0.5。指定如何转换相对于拖动源节点的偏移量
     * 当它们的大小不匹配时，拖动预览的水平偏移。0表示“将预览停靠在左侧”，0.5表示
     * “线性插值”，1表示“预览向右停靠”
	 */
	anchorX?: number

	/**
     * 可选的。0到1之间的数字。默认情况下,0.5。指定相对于拖动源节点的偏移量如何转换为
     * 当拖动预览的大小不匹配时的垂直偏移量。0表示“将预览放到顶部”，0.5表示“插入”
	 * 线性“和1意味着”停靠预览到底部。
	 */
	anchorY?: number

	/**
     * 可选的。一个数字或null，如果不需要的话。默认情况下,零。指定光标与拖动预览之间的垂直偏移量
     * 元素。如果offsetX有一个值，则不会使用anchorX。
	 */
	offsetX?: number

	/**
     *  可选的。一个数字或null，如果不需要的话。默认情况下,零。指定光标与拖拽物之间的垂直偏移量
     *  预览元素。如果offsetY有一个值，则不会使用anchorY。
	 */
	offsetY?: number
}

export type DropTargetOptions = any
